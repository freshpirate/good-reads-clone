exit
request.headers
request.headers.has_key?('gr_api_key')
request.headers.has_key?('GR_API_KEY')
request.headers.has_key?('HTTP_API_KEY')
request.headers.has_key?('API_KEY')
request.headers.keys
exit
request.headers.keys
request.headers.has_key?('API_KEY')
request.headers.has_key?('HTTP_API_KEY')
request.headers.has_key?('GR_API_KEY')
request.headers['GR_API_KEY']
exit
request.headers.has_key?('HTTP_API_KEY')
request.headers['HTTP_API_KEY']
request.headers['http_api_key']
request.headers['api_key']
request.headers.to_h
request.headers.to_s
request.headers.to_h
request.headers.keys.index('API_KEY')
request.headers.keys.index('api_key')
request.headers.keys.find('api_key')
request.headers.keys.length
request.headers.keys
request.headers['api_key']
request.headers.has_key?('API_KEY')
request.headers.to_h.keys
request.headers.to_h.has_key?('api_key')
request.headers.has_key?('api_key')
request.headers['api_key']
request.headers.api_key
request.headers
exit
params["persistence_token"]
params["action"]
params.has_key?('action')
exit
params.as_json['persistence_token']
params.as_json['action']
params.as_json[:action]
params.as_json[action]
params.as_json[action']
params.as_json.class
params.as_json
params.to_json.class
params.to_json.peristence_token
params.to_h.get('persistence_token')
params.to_h.class
params.class
params.to_h.persistence_token
params.to_h
params.persistence_token
@current_user
params
exit
params
exit
@current_user
exit
@current_user
exit
current_user_session
current_user
exit
exxit
@user_session
current_user_session
exit
current_user_session
exit
@user_session.record.persistence_token
@user_session.record
@user_session.as_json
@user_session
exit
UserSession.all
UserSession.find
exit
help
request
exit
request.attributes
request.class
request["rack.session"]
request[]
request.rack.session
request.rack_session
request.to_json
request
